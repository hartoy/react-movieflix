{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harto\\\\OneDrive\\\\Escritorio\\\\PROG\\\\REACT CON JAVI\\\\react-api-movies\\\\src\\\\components\\\\SearchResults\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useLocation } from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport imgLoading from \"../../img/imgLoading.png\";\nimport './searchResults.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchResults() {\n  _s();\n\n  const [validator, setValidator] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [results, setResults] = useState(false);\n  const location = useLocation();\n  const query = location.search;\n  let word = query.substring(8);\n  console.log(word);\n  useEffect(() => {\n    if (word.length <= 2) {\n      setValidator(false);\n      setIsLoading(false);\n    } else {\n      const getData = async () => {\n        let endPoint = `\n                https://api.themoviedb.org/3/search/movie?api_key=fb6347fd6c56bdb6a17dca07b0c83079&language=en-US&query=${word}&page=1&include_adult=false`;\n        let response = await fetch(endPoint);\n        let data = await response.json();\n        return data;\n      };\n\n      getData().then(data => {\n        setMovies(data.results);\n        console.log(data.results);\n        setIsLoading(false);\n        setValidator(true);\n        setResults(true);\n      });\n    }\n  }, [word]);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cargando\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"loading\",\n        children: \" Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"imgLoading\",\n        src: imgLoading,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), !validator && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"validator\",\n      children: \" \\u274C At least 3 characters are required for your search \\u274C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 26\n    }, this), !results ? movies.map(oneMovie => {\n      let imagenMovie = `https://image.tmdb.org/t/p/w500${oneMovie.poster_path}`;\n      return /*#__PURE__*/_jsxDEV(Col, {\n        lg: 3,\n        sm: 6,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"my-2 h-100\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: imagenMovie\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                className: \"titulo d-inline-block\",\n                children: oneMovie.title.substr(0, 25).trim()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"resumen\",\n                children: [oneMovie.overview.substr(0, 90).trim(), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"detalles\",\n                as: Link,\n                to: `/movie-details/${oneMovie.id}`,\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \" heart d-inline-block\",\n                children: \"\\uD83D\\uDDA4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 18\n          }, this)\n        }, oneMovie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"La pelicula no existe en la base de datos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchResults, \"wadwZHuK45iCwMy69HEMO3Ix99Y=\", false, function () {\n  return [useLocation];\n});\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["C:/Users/harto/OneDrive/Escritorio/PROG/REACT CON JAVI/react-api-movies/src/components/SearchResults/index.jsx"],"names":["useLocation","React","useState","useEffect","Card","Button","Row","Col","Link","imgLoading","SearchResults","validator","setValidator","movies","setMovies","isLoading","setIsLoading","results","setResults","location","query","search","word","substring","console","log","length","getData","endPoint","response","fetch","data","json","then","map","oneMovie","imagenMovie","poster_path","title","substr","trim","overview","id"],"mappings":"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","sourcesContent":["import { useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Row,  Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport imgLoading from \"../../img/imgLoading.png\";\r\n\r\nimport './searchResults.css'\r\n\r\nfunction SearchResults (){\r\n    \r\n    const [ validator, setValidator ] = useState(true);\r\n    const [ movies, setMovies ] = useState([]);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const [ results, setResults ] = useState(false);\r\n   \r\n\r\n    const location = useLocation();\r\n    const query = location.search;\r\n    \r\n    let word= query.substring(8);\r\n    console.log(word);\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        if (word.length<=2) {\r\n            setValidator(false)\r\n            setIsLoading(false);\r\n        }else{\r\n            const getData = async () =>{\r\n                let endPoint =  `\r\n                https://api.themoviedb.org/3/search/movie?api_key=fb6347fd6c56bdb6a17dca07b0c83079&language=en-US&query=${word}&page=1&include_adult=false`; \r\n                let response = await fetch(endPoint);\r\n                let data = await response.json();\r\n                return data;  \r\n               } \r\n                getData().then(data =>{\r\n                   setMovies(data.results);\r\n                   console.log(data.results);\r\n                   setIsLoading(false);\r\n                   setValidator(true)\r\n                   setResults(true)\r\n                   \r\n    \r\n               });\r\n        }\r\n           \r\n    },[word])\r\n\r\n\r\n\r\n   \r\n    \r\n    return(\r\n        \r\n            \r\n        <Row>\r\n          { isLoading && \r\n            <div className= \"cargando\">\r\n              <h3 className=\"loading\"> Loading...</h3>  \r\n              <img className=\"imgLoading\" src={imgLoading} alt=\"\" />\r\n              \r\n           </div>\r\n          }\r\n\r\n          {!validator && <h3 className=\"validator\"> ❌ At least 3 characters are required for your search ❌</h3>} \r\n          { !results? movies.map(oneMovie =>{\r\n           let imagenMovie = `https://image.tmdb.org/t/p/w500${oneMovie.poster_path}`;\r\n           return(\r\n               <Col lg={3} sm={6} xs ={12} >\r\n               <div key={oneMovie.id}>\r\n                   \r\n                   \r\n                   \r\n                 <Card className=\"my-2 h-100\">\r\n                  <Card.Img variant=\"top\" src = {imagenMovie} />\r\n                  <Card.Body>\r\n                   <Card.Title className=\"titulo d-inline-block\">{oneMovie.title.substr(0, 25).trim()}</Card.Title>\r\n                     \r\n                   <Card.Text className=\"resumen\" >{oneMovie.overview.substr(0, 90).trim()}...</Card.Text>\r\n                   <Button className=\"detalles\" as={Link} to={`/movie-details/${oneMovie.id}`}>Details</Button>\r\n                   <p className=\" heart d-inline-block\">🖤</p>\r\n                  </Card.Body>\r\n                  \r\n                 </Card>\r\n                 \r\n                 \r\n                 \r\n               </div>\r\n               </Col>\r\n           )\r\n       } ):\r\n       <h2 className=\"text-center\">La pelicula no existe en la base de datos</h2>}\r\n       \r\n       </Row>\r\n       \r\n  \r\n    \r\n)\r\n}\r\n\r\nexport default SearchResults;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}