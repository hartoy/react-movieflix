{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harto\\\\OneDrive\\\\Escritorio\\\\PROG\\\\REACT CON JAVI\\\\react-api-movies\\\\src\\\\components\\\\Movies\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport imgLoading from \"../../img/imgLoading.png\";\nimport './movies.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movies() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const baseURL = 'https://api.themoviedb.org/3/movie/';\n  const apiKey = 'fb6347fd6c56bdb6a17dca07b0c83079'; //component did mount\n\n  useEffect(() => {\n    const getData = async () => {\n      let endPoint = `${baseURL}popular?api_key=${apiKey}&language=en-US&page=1`;\n      let response = await fetch(endPoint);\n      let data = await response.json();\n      return data;\n    };\n\n    getData().then(data => {\n      setMovies(data.results);\n      console.log(data);\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cargando\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"loading\",\n        children: \" Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"imgLoading\",\n        src: imgLoading,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), movies.map(oneMovie => {\n      let imagenMovie = `https://image.tmdb.org/t/p/w500${oneMovie.poster_path}`;\n      return /*#__PURE__*/_jsxDEV(Col, {\n        lg: 3,\n        sm: 6,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"my-2 h-100\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: imagenMovie\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                className: \"titulo d-inline-block\",\n                children: oneMovie.title.substr(0, 25).trim()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"resumen\",\n                children: [oneMovie.overview.substr(0, 90).trim(), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"detalles\",\n                as: Link,\n                to: `/movie-details/${oneMovie.id}`,\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \" heart d-inline-block\",\n                children: \"\\uD83D\\uDDA4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)\n        }, oneMovie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 14\n  }, this);\n}\n\n_s(Movies, \"v+J2WwQYzWJoWEDUOkqfLXKVfrk=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["C:/Users/harto/OneDrive/Escritorio/PROG/REACT CON JAVI/react-api-movies/src/components/Movies/index.jsx"],"names":["React","useState","useEffect","Card","Button","Row","Col","Link","imgLoading","Movies","isLoading","setIsLoading","movies","setMovies","baseURL","apiKey","getData","endPoint","response","fetch","data","json","then","results","console","log","map","oneMovie","imagenMovie","poster_path","title","substr","trim","overview","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Row,  Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport imgLoading from \"../../img/imgLoading.png\";\r\nimport './movies.css'\r\n\r\n\r\n\r\nfunction Movies (){\r\n\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const [ movies, setMovies ] = useState([]);\r\n    \r\n  const baseURL = 'https://api.themoviedb.org/3/movie/';\r\n  const apiKey = 'fb6347fd6c56bdb6a17dca07b0c83079';\r\n  \r\n    \r\n    //component did mount\r\n\r\n    useEffect(() => {\r\n        const getData = async () =>{\r\n            let endPoint =  `${baseURL}popular?api_key=${apiKey}&language=en-US&page=1`; \r\n            let response = await fetch(endPoint);\r\n            let data = await response.json();\r\n            return data;  \r\n           } \r\n            getData().then(data =>{\r\n               setMovies(data.results);\r\n               console.log(data);\r\n               setIsLoading(false);\r\n           });\r\n           \r\n    },[])\r\n    \r\n\r\n    return(\r\n        \r\n            \r\n             <Row>\r\n              \r\n              { isLoading && \r\n            <div className= \"cargando\">\r\n              <h3 className=\"loading\"> Loading...</h3>  \r\n              <img className=\"imgLoading\" src={imgLoading} alt=\"\" />\r\n              \r\n           </div>\r\n          }\r\n               {movies.map(oneMovie =>{\r\n                let imagenMovie = `https://image.tmdb.org/t/p/w500${oneMovie.poster_path}`;\r\n                return(\r\n                    <Col lg={3} sm={6} xs ={12} >\r\n                    <div key={oneMovie.id}>\r\n                        \r\n                        \r\n                        \r\n                    <Card className=\"my-2 h-100\">\r\n                  <Card.Img variant=\"top\" src = {imagenMovie} />\r\n                  <Card.Body>\r\n                   <Card.Title className=\"titulo d-inline-block\">{oneMovie.title.substr(0, 25).trim()}</Card.Title>\r\n                     \r\n                   <Card.Text className=\"resumen\" >{oneMovie.overview.substr(0, 90).trim()}...</Card.Text>\r\n                   <Button className=\"detalles\" as={Link} to={`/movie-details/${oneMovie.id}`}>Details</Button>\r\n                   <p className=\" heart d-inline-block\">ðŸ–¤</p>\r\n                  </Card.Body>\r\n                  \r\n                 </Card>\r\n                 \r\n                 \r\n                 \r\n               </div>\r\n               </Col>\r\n           )\r\n       } )}\r\n       \r\n       </Row>\r\n            \r\n       \r\n         \r\n     )\r\n }\r\n export default Movies;"]},"metadata":{},"sourceType":"module"}