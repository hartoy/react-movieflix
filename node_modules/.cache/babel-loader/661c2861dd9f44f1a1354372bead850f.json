{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harto\\\\OneDrive\\\\Escritorio\\\\PROG\\\\REACT CON JAVI\\\\react-api-movies\\\\src\\\\components\\\\SearchResults\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useLocation } from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react';\nimport { Row } from 'react-bootstrap';\nimport './searchResults.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchResults() {\n  _s();\n\n  const [validator, setValidator] = useState(true);\n  const [movies, setMovies] = useState(true);\n  const [results, setResults] = useState(true);\n  const location = useLocation();\n  const query = location.search;\n  let word = query.substring(8);\n  console.log(word); //component did mount\n\n  useEffect(() => {\n    if (word.length <= 3) {\n      setValidator(false);\n    } else {\n      const getData = async () => {\n        let endPoint = `\n                https://api.themoviedb.org/3/search/movie?api_key=fb6347fd6c56bdb6a17dca07b0c83079&language=en-US&query=${word}&page=1&include_adult=false`;\n        let response = await fetch(endPoint);\n        let data = await response.json();\n        return data;\n      };\n\n      getData().then(data => {\n        if (data.results != 0) {\n          setMovies(data.results);\n        } else {\n          setResults(fase);\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [!validator && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Tu busqueda debe tener mas de 3 caracteres\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }, this), !results && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" No se encontro ninguna pelicula\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchResults, \"CSX4SWniwtlCJfGGngmsgHTVaik=\", false, function () {\n  return [useLocation];\n});\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["C:/Users/harto/OneDrive/Escritorio/PROG/REACT CON JAVI/react-api-movies/src/components/SearchResults/index.jsx"],"names":["useLocation","React","useState","useEffect","Row","SearchResults","validator","setValidator","movies","setMovies","results","setResults","location","query","search","word","substring","console","log","length","getData","endPoint","response","fetch","data","json","then","fase"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,iBAApB;AAGA,OAAO,qBAAP;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AAErB,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BL,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAAEM,MAAF,EAAUC,SAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAEQ,OAAF,EAAWC,UAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAMU,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,KAAK,GAAGD,QAAQ,CAACE,MAAvB;AAEA,MAAIC,IAAI,GAAEF,KAAK,CAACG,SAAN,CAAgB,CAAhB,CAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAVqB,CAYrB;;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,IAAI,CAACI,MAAL,IAAa,CAAjB,EAAoB;AAChBZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFD,MAEK;AACD,YAAMa,OAAO,GAAG,YAAW;AACvB,YAAIC,QAAQ,GAAK;AACjC,0HAA0HN,IAAK,6BAD/G;AAEA,YAAIO,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA1B;AACA,YAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,eAAOD,IAAP;AACA,OANJ;;AAOIJ,MAAAA,OAAO,GAAGM,IAAV,CAAeF,IAAI,IAAG;AAClB,YAAIA,IAAI,CAACd,OAAL,IAAgB,CAApB,EAAuB;AACnBD,UAAAA,SAAS,CAACe,IAAI,CAACd,OAAN,CAAT;AAEH,SAHD,MAGK;AACDC,UAAAA,UAAU,CAACgB,IAAD,CAAV;AACH;AAEL,OARA;AASP;AAEJ,GAtBQ,EAsBP,EAtBO,CAAT;AAwBA,sBACI,QAAC,GAAD;AAAA,eACM,CAACrB,SAAD,iBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADpB,EAEM,CAACI,OAAD,iBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA5CQL,a;UAMYL,W;;;KANZK,a;AA8CT,eAAeA,aAAf","sourcesContent":["import { useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Row } from 'react-bootstrap';\r\n\r\n\r\nimport './searchResults.css'\r\n\r\nfunction SearchResults (){\r\n    \r\n    const [ validator, setValidator ] = useState(true);\r\n    const [ movies, setMovies ] = useState(true);\r\n    const [ results, setResults ] = useState(true);\r\n\r\n    const location = useLocation();\r\n    const query = location.search;\r\n    \r\n    let word= query.substring(8);\r\n    console.log(word);\r\n    \r\n    //component did mount\r\n\r\n    useEffect(() => {\r\n        if (word.length<=3) {\r\n            setValidator(false)\r\n        }else{\r\n            const getData = async () =>{\r\n                let endPoint =  `\r\n                https://api.themoviedb.org/3/search/movie?api_key=fb6347fd6c56bdb6a17dca07b0c83079&language=en-US&query=${word}&page=1&include_adult=false`; \r\n                let response = await fetch(endPoint);\r\n                let data = await response.json();\r\n                return data;  \r\n               } \r\n                getData().then(data =>{\r\n                    if (data.results != 0) {\r\n                        setMovies(data.results);\r\n                        \r\n                    }else{\r\n                        setResults(fase);\r\n                    }\r\n    \r\n               });\r\n        }\r\n           \r\n    },[])\r\n    \r\n    return(\r\n        <Row>\r\n             {!validator && <h3> Tu busqueda debe tener mas de 3 caracteres</h3>}   \r\n             {!results && <h3> No se encontro ninguna pelicula</h3>}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default SearchResults;"]},"metadata":{},"sourceType":"module"}