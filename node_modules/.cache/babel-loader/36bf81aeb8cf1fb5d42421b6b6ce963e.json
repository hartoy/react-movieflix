{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harto\\\\OneDrive\\\\Escritorio\\\\PROG\\\\REACT CON JAVI\\\\react-api-movies\\\\src\\\\components\\\\MovieDetails\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './movieDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieDetails(props) {\n  _s();\n\n  const id = props.match.params.id;\n  const [isLoading, setIsLoading] = useState(true);\n  const [movies, setMovies] = useState([]); //component did mount\n\n  useEffect(() => {\n    const getData = async () => {\n      let endPoint = `https://api.themoviedb.org/3/movie/${id}?api_key=fb6347fd6c56bdb6a17dca07b0c83079&language=en-US`;\n      let response = await fetch(endPoint);\n      let data = await response.json();\n      return data;\n    };\n\n    getData().then(data => {\n      setMovies(data);\n      console.log(data);\n      setIsLoading(false);\n    });\n  }, []);\n  let imagenMovie = `https://image.tmdb.org/t/p/w500${movies.poster_path}`;\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDetails\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagenMovie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: movies.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movies.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movies.vote_average\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"detalles buttonLink\",\n          as: Link,\n          to: \"/\",\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieDetails, \"v+J2WwQYzWJoWEDUOkqfLXKVfrk=\");\n\n_c = MovieDetails;\nexport default MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["C:/Users/harto/OneDrive/Escritorio/PROG/REACT CON JAVI/react-api-movies/src/components/MovieDetails/index.jsx"],"names":["React","useState","useEffect","Button","Row","Col","Link","MovieDetails","props","id","match","params","isLoading","setIsLoading","movies","setMovies","getData","endPoint","response","fetch","data","json","then","console","log","imagenMovie","poster_path","original_title","overview","vote_average"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAUC,MAAV,EAAkBC,GAAlB,EAAwBC,GAAxB,QAAmC,iBAAnC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,oBAAP;;;AAIA,SAASC,YAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAE1B,QAAMC,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AAGA,QAAM,CAAEG,SAAF,EAAaC,YAAb,IAA8BZ,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAAEa,MAAF,EAAUC,SAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC,CAN0B,CAQ3B;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMc,OAAO,GAAG,YAAW;AACvB,UAAIC,QAAQ,GAAK,sCAAqCR,EAAG,0DAAzD;AACA,UAAIS,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA1B;AACA,UAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,aAAOD,IAAP;AACA,KALJ;;AAMIJ,IAAAA,OAAO,GAAGM,IAAV,CAAeF,IAAI,IAAG;AACnBL,MAAAA,SAAS,CAACK,IAAD,CAAT;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEAP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KALA;AAOP,GAdW,EAcV,EAdU,CAAT;AAeH,MAAIY,WAAW,GAAI,kCAAiCX,MAAM,CAACY,WAAY,EAAvE;AAIA,sBACI,QAAC,GAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,iBACKd,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADlB,eAEI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACA;AAAK,UAAA,GAAG,EAAIa;AAAZ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,gCACA;AAAA,oBAAKX,MAAM,CAACa;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,oBAAIb,MAAM,CAACc;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA,oBAAId,MAAM,CAACe;AAAX;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,qBAAlB;AAAwC,UAAA,EAAE,EAAEvB,IAA5C;AAAkD,UAAA,EAAE,EAAC,GAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBC;;GA9CQC,Y;;KAAAA,Y;AAgDT,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {  Button, Row,  Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './movieDetails.css'\r\n\r\n\r\n\r\nfunction MovieDetails (props) {\r\n\r\n    const id = props.match.params.id;\r\n\r\n\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const [ movies, setMovies ] = useState([]);\r\n   \r\n   //component did mount\r\n\r\n   useEffect(() => {\r\n    const getData = async () =>{\r\n        let endPoint =  `https://api.themoviedb.org/3/movie/${id}?api_key=fb6347fd6c56bdb6a17dca07b0c83079&language=en-US`; \r\n        let response = await fetch(endPoint);\r\n        let data = await response.json();\r\n        return data;  \r\n       } \r\n        getData().then(data =>{\r\n           setMovies(data);\r\n           console.log(data);\r\n           \r\n           setIsLoading(false);\r\n       });\r\n       \r\n},[])\r\nlet imagenMovie = `https://image.tmdb.org/t/p/w500${movies.poster_path}`;\r\n    \r\n\r\n\r\nreturn(\r\n    <Row>\r\n      <div className=\"movieDetails\">\r\n          {isLoading && <h3> Loading...</h3> }\r\n          <Col lg={6} >\r\n          <img src = {imagenMovie}  />\r\n          </Col>\r\n          <Col lg={6} >\r\n          <h1>{movies.original_title}</h1>\r\n          <p>{movies.overview}</p>\r\n          <p>{movies.vote_average}</p>\r\n          <Button className=\"detalles buttonLink\" as={Link} to=\"/\">Go Back</Button>\r\n          </Col>\r\n      </div>\r\n    </Row>  \r\n   )\r\n\r\n}\r\n\r\nexport default MovieDetails;"]},"metadata":{},"sourceType":"module"}