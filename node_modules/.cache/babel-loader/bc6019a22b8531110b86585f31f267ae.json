{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harto\\\\OneDrive\\\\Escritorio\\\\PROG\\\\REACT CON JAVI\\\\react-api-movies\\\\src\\\\components\\\\MovieDetails\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './movieDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieDetails(props) {\n  _s();\n\n  const id = props.match.params.id;\n  const [isLoading, setIsLoading] = useState(true); //component did mount\n\n  useEffect(() => {\n    const getData = async () => {\n      let endPoint = `https://api.themoviedb.org/3/find/436969?api_key=fb6347fd6c56bdb6a17dca07b0c83079&language=en-US&external_source=imdb_id`;\n      let response = await fetch(endPoint);\n      let data = await response.json();\n      return data;\n    };\n\n    getData().then(data => {\n      setMovies(data.results);\n      console.log(data.results);\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: [\"El \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieDetails, \"32BSnjQUf6AniHH8WimXTYAgDNA=\");\n\n_c = MovieDetails;\nexport default MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["C:/Users/harto/OneDrive/Escritorio/PROG/REACT CON JAVI/react-api-movies/src/components/MovieDetails/index.jsx"],"names":["React","useState","useEffect","MovieDetails","props","id","match","params","isLoading","setIsLoading","getData","endPoint","response","fetch","data","json","then","setMovies","results","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,oBAAP;;;AAIA,SAASC,YAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAE1B,QAAMC,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AAGA,QAAM,CAAEG,SAAF,EAAaC,YAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C,CAL0B,CAO3B;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMQ,OAAO,GAAG,YAAW;AACvB,UAAIC,QAAQ,GAAK,0HAAjB;AACA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA1B;AACA,UAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,aAAOD,IAAP;AACA,KALJ;;AAMIJ,IAAAA,OAAO,GAAGM,IAAV,CAAeF,IAAI,IAAG;AACnBG,MAAAA,SAAS,CAACH,IAAI,CAACI,OAAN,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACI,OAAjB;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAJA;AAMP,GAbW,EAaV,EAbU,CAAT;AAeC,sBACA;AAAA,sBAASJ,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAIH;;GA5BQF,Y;;KAAAA,Y;AA8BT,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport './movieDetails.css'\r\n\r\n\r\n\r\nfunction MovieDetails (props) {\r\n\r\n    const id = props.match.params.id;\r\n\r\n\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n   \r\n   //component did mount\r\n\r\n   useEffect(() => {\r\n    const getData = async () =>{\r\n        let endPoint =  `https://api.themoviedb.org/3/find/436969?api_key=fb6347fd6c56bdb6a17dca07b0c83079&language=en-US&external_source=imdb_id`; \r\n        let response = await fetch(endPoint);\r\n        let data = await response.json();\r\n        return data;  \r\n       } \r\n        getData().then(data =>{\r\n           setMovies(data.results);\r\n           console.log(data.results);\r\n           setIsLoading(false);\r\n       });\r\n       \r\n},[])\r\n   \r\n    return(\r\n    <h2>El { id }</h2>\r\n   )\r\n\r\n}\r\n\r\nexport default MovieDetails;"]},"metadata":{},"sourceType":"module"}