{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harto\\\\OneDrive\\\\Escritorio\\\\PROG\\\\REACT CON JAVI\\\\react-api-movies\\\\src\\\\components\\\\Movies\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './movies.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ApiTest() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const baseURL = 'https://api.themoviedb.org/3/movie/';\n  const apiKey = 'fb6347fd6c56bdb6a17dca07b0c83079'; //component did mount\n\n  useEffect(() => {\n    const getData = async () => {\n      let endPoint = `${baseURL}popular?api_key=${apiKey}&language=en-US&page=1`;\n      let response = await fetch(endPoint);\n      let data = await response.json();\n      return data;\n    };\n\n    getData().then(data => {\n      setMovies(data.results);\n      console.log(data.results);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies\",\n    children: movies.map(oneMovie => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", oneMovie.original_title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, oneMovie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ApiTest, \"v+J2WwQYzWJoWEDUOkqfLXKVfrk=\");\n\n_c = ApiTest;\nexport default ApiTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiTest\");","map":{"version":3,"sources":["C:/Users/harto/OneDrive/Escritorio/PROG/REACT CON JAVI/react-api-movies/src/components/Movies/index.jsx"],"names":["React","useState","useEffect","ApiTest","isLoading","setIsLoading","movies","setMovies","baseURL","apiKey","getData","endPoint","response","fetch","data","json","then","results","console","log","map","oneMovie","original_title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;;;AAIA,SAASC,OAAT,GAAmB;AAAA;;AAEf,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BJ,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAAEK,MAAF,EAAUC,SAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEF,QAAMO,OAAO,GAAG,qCAAhB;AACA,QAAMC,MAAM,GAAG,kCAAf,CANiB,CASf;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,OAAO,GAAG,YAAW;AACvB,UAAIC,QAAQ,GAAK,GAAEH,OAAQ,mBAAkBC,MAAO,wBAApD;AACA,UAAIG,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA1B;AACA,UAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,aAAOD,IAAP;AACA,KALJ;;AAMIJ,IAAAA,OAAO,GAAGM,IAAV,CAAeF,IAAI,IAAG;AACnBP,MAAAA,SAAS,CAACO,IAAI,CAACG,OAAN,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACG,OAAjB;AACH,KAHA;AAKP,GAZQ,EAYP,EAZO,CAAT;AAeA,sBACI;AAAK,IAAA,SAAS,EAAE,QAAhB;AAAA,cACKX,MAAM,CAACc,GAAP,CAAWC,QAAQ,IAAG;AACnB,0BACI;AAAA,+BACI;AAAA,0BAAMA,QAAQ,CAACC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUD,QAAQ,CAACE,EAAnB;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAeF;;GAzCOpB,O;;KAAAA,O;AA0CR,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './movies.css'\r\n\r\n\r\n\r\nfunction ApiTest (){\r\n\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const [ movies, setMovies ] = useState([]);\r\n    \r\n  const baseURL = 'https://api.themoviedb.org/3/movie/';\r\n  const apiKey = 'fb6347fd6c56bdb6a17dca07b0c83079';\r\n  \r\n    \r\n    //component did mount\r\n\r\n    useEffect(() => {\r\n        const getData = async () =>{\r\n            let endPoint =  `${baseURL}popular?api_key=${apiKey}&language=en-US&page=1`; \r\n            let response = await fetch(endPoint);\r\n            let data = await response.json();\r\n            return data;  \r\n           } \r\n            getData().then(data =>{\r\n               setMovies(data.results);\r\n               console.log(data.results);\r\n           });\r\n           \r\n    },[])\r\n\r\n\r\n    return(\r\n        <div className= \"movies\">\r\n            {movies.map(oneMovie =>{\r\n                return(\r\n                    <div key={oneMovie.id}>\r\n                        <h3> {oneMovie.original_title} </h3>\r\n\r\n                    </div>\r\n                )\r\n            } )}\r\n          \r\n         \r\n       </div>\r\n         \r\n     )\r\n }\r\n export default ApiTest;"]},"metadata":{},"sourceType":"module"}